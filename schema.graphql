type Nft {
  id: ID! # tokenId
  owner: String!
  from: String!
  to: String!
  image: String!
  attributes: String!
}

type DragonZ_Approval {
  id: ID!
  owner: String!
  approved: String!
  tokenId: BigInt!
}

type DragonZ_ApprovalForAll {
  id: ID!
  owner: String!
  operator: String!
  approved: Boolean!
}

type DragonZ_BatchMetadataUpdate {
  id: ID!
  _fromTokenId: BigInt!
  _toTokenId: BigInt!
}

type DragonZ_MetadataUpdate {
  id: ID!
  _tokenId: BigInt!
}

type DragonZ_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type DragonZ_Transfer {
  id: ID!
  from: String!
  to: String!
  tokenId: BigInt!
}

type NetZFinance_Approval {
  id: ID!
  owner: String!
  spender: String!
  value: BigInt!
}

type NetZFinance_AutoLiquify {
  id: ID!
  amountNETZ: BigInt!
  amountBOG: BigInt!
}

type NetZFinance_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type NetZFinance_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}